name: CI-ML-Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  train-and-evaluate:
    runs-on: ubuntu-latest

    env:
      # MLflow stocke les runs dans le workspace du runner (droit d'écriture OK)
      MLFLOW_TRACKING_URI: file:${{ github.workspace }}/mlruns

    steps:
      # 1) Récupérer le code
      - name: Checkout repository code
        uses: actions/checkout@v4

      # 2) Python + cache pip
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          cache: "pip"

      # 3) Dépendances (+ ressources NLTK)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m nltk.downloader stopwords punkt wordnet

      # 4) Créer le dossier MLflow (au cas où)
      - name: Prepare mlruns dir
        run: mkdir -p mlruns

      # 5) Exécuter le pipeline
      - name: Run Data and ML Pipeline
        run: |
          python src/load_data.py
          python src/preprocess.py
          python src/train.py
          python src/evaluate.py

      # 6) Uploader les résultats MLflow
      - name: Upload MLflow results
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-results
          path: mlruns/
          if-no-files-found: warn